import logging
import os
import openai
import base64
from telegram import Update
from telegram.ext import ApplicationBuilder, MessageHandler, ContextTypes, CommandHandler, filters

# –õ–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
BOT_TOKEN = os.getenv("BOT_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
openai.api_key = OPENAI_API_KEY

# /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ –µ–¥—ã ‚Äî —è —Å–∫–∞–∂—É, —Å–∫–æ–ª—å–∫–æ —Ç–∞–º –∫–∞–ª–æ—Ä–∏–π üçí")

# –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ
async def handle_photo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ! –Ø –∞–Ω–∞–ª–∏–∑–∏—Ä—É—é... üçΩÔ∏è")

    try:
        # —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–æ—Ç–æ
        photo_file = await update.message.photo[-1].get_file()
        photo_path = "/tmp/photo.jpg"
        await photo_file.download_to_drive(photo_path)

        # –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ base64
        with open(photo_path, "rb") as image_file:
            base64_image = base64.b64encode(image_file.read()).decode("utf-8")

        # GPT-4o Vision API
        response = openai.chat.completions.create(
            model="gpt-4o",
            messages=[
                {
                    "role": "user",
                    "content": [
                        {"type": "text", "text": "–ß—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–æ –Ω–∞ —Ñ–æ—Ç–æ –∏ —Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä–Ω–æ –∫–∞–ª–æ—Ä–∏–π?"},
                        {
                            "type": "image_url",
                            "image_url": {
                                "url": f"data:image/jpeg;base64,{base64_image}"
                            }
                        }
                    ]
                }
            ]
        )

        result = response.choices[0].message.content
        await update.message.reply_text(result)

    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞: {e}")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.")

# –ó–∞–ø—É—Å–∫
if __name__ == '__main__':
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.PHOTO, handle_photo))
    app.run_polling()
